if (WIN32)
    ## TODO: set grpc_home
    ##
elseif (UNIX AND NOT APPLE)
    set(grpc_home /opt/HikSDK/grpc)
    set(grpc_bin_dir ${grpc_home}/bin)
    set(grpc_lib_dir ${grpc_home}/lib)
    set(grpc_include_dir ${grpc_home}/include)

    list(APPEND CMAKE_PREFIX_PATH ${grpc_home}/cmake)
    list(APPEND CMAKE_PREFIX_PATH ${grpc_home}/lib/cmake)

    link_directories(${grpc_lib_dir})
    include_directories(SYSTEM ${grpc_include_dir})
    include_directories(${grpc_gen_dir})
else (APPLE)
    ## TODO: set grpc_home
    ##
endif ()

include(${PROJECT_SOURCE_DIR}/tool/cmake/use_absl.cmake)

#set(grpc_src_dir ${CMAKE_CURRENT_SOURCE_DIR}/proto)

if (DEFINED grpc_src_dir)
    ## make dir for `*.grpc.pb.cc`, `*.grpc.pb.h` files generated by `protoc`
    set(grpc_gen_dir ${grpc_src_dir}/gen)
    file(MAKE_DIRECTORY ${grpc_gen_dir})

    ## get all `*.proto` files
    file(GLOB grpc_all_files CONFIGURE_DEPENDS "${grpc_src_dir}/*.proto")
    list(APPEND grpc_files ${grpc_all_files})

    add_custom_command(OUTPUT grpc_gen_files
            COMMAND export LD_LIBRARY_PATH=${LD_LIBRARY_PAT}:${proto_lib_dir}:${grpc_lib_dir} && ${proto_bin_dir}/protoc -I ${grpc_src_dir} --grpc_out=${grpc_gen_dir} --plugin=protoc-gen-grpc=${grpc_bin_dir}/grpc_cpp_plugin ${proto_files}
            DEPENDS ${grpc_files}
            )

    add_custom_target(grpc_2_cxx DEPENDS grpc_gen_files)
endif ()

list(APPEND 3rd_party_libs grpc++_reflection grpc++ pthread)
### try
#set(protobuf_MODULE_COMPATIBLE TRUE)
#find_package(Protobuf CONFIG REQUIRED)
#message(STATUS "Using protobuf ${protobuf_VERSION}")
#
#set(_PROTOBUF_LIBPROTOBUF protobuf::libprotobuf)
#set(_REFLECTION gRPC::grpc++_reflection)
#if (CMAKE_CROSSCOMPILING)
#    find_program(_PROTOBUF_PROTOC protoc)
#else ()
#    set(_PROTOBUF_PROTOC $<TARGET_FILE:protobuf::protoc>)
#endif ()
#
#find_package(gRPC CONFIG REQUIRED)
#message(STATUS "Using gRPC ${gRPC_VERSION}")
#
#set(_GRPC_GRPCPP gRPC::grpc++)
#if (CMAKE_CROSSCOMPILING)
#    find_program(_GRPC_CPP_PLUGIN_EXECUTABLE grpc_cpp_plugin)
#else ()
#    set(_GRPC_CPP_PLUGIN_EXECUTABLE $<TARGET_FILE:gRPC::grpc_cpp_plugin>)
#endif ()
#
#SET(EXTRA_LIBS ${_REFLECTION} ${_GRPC_GRPCPP} ${_PROTOBUF_LIBPROTOBUF} pthread ${EXTRA_LIBS})

